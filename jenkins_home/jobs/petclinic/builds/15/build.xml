<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.24">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause/>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.9">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@1.3.1">
      <stagesUUID>97bad8eb-8c7f-49cb-bb17-40dcaa637601</stagesUUID>
      <stagesList>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStages plugin="pipeline-model-api@1.3.1">
          <stages>
            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <name>compile, test and package</name>
              <branches>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>sh</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>script</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">mvn clean package</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                  </steps>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
              </branches>
              <parallelContent/>
            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <name>SonarQube analysis</name>
              <branches>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                      <name>withSonarQubeEnv</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                        <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                          <value class="string">Sonar</value>
                        </value>
                      </args>
                      <children>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                          <name>script</name>
                          <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                            <arguments class="linked-hash-map">
                              <entry>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <key>scriptBlock</key>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                  <value class="string">sh &apos;mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.3.0.603:sonar &apos; + 
                                        &apos;-f pom.xml &apos; +
                                        &apos;-Dsonar.projectKey=com.petclinic:all:master &apos; +
                                        &apos;-Dsonar.login=admin &apos; +
                                        &apos;-Dsonar.password=admin &apos; +
                                        &apos;-Dsonar.language=java &apos; +
                                        &apos;-Dsonar.sources=. &apos; +
                                        &apos;-Dsonar.tests=. &apos; +
                                        &apos;-Dsonar.test.inclusions=**/*Test*/** &apos; +
                                        &apos;-Dsonar.exclusions=**/*Test*/** &apos;</value>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              </entry>
                            </arguments>
                          </args>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                      </children>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                      <name>script</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>scriptBlock</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">sleep 30
                                                timeout(time: 1, unit: &apos;HOURS&apos;) {  
                                                def qg = waitForQualityGate()
                                                        if (qg.status != &apos;OK&apos;) {
                                                                error &quot;Pipeline aborted due to quality gate failure: ${qg.status}&quot;
                                                        }
                                                }</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                  </steps>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
              </branches>
              <parallelContent/>
            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <name>archival</name>
              <branches>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>archiveArtifacts</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>artifacts</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">target/*.?ar</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                  </steps>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
              </branches>
              <parallelContent/>
            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <name>unit test</name>
              <branches>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>junit</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>testResults</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">target/surefire-reports/*.xml</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                  </steps>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
              </branches>
              <parallelContent/>
            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
          </stages>
          <uuid>97bad8eb-8c7f-49cb-bb17-40dcaa637601</uuid>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStages>
      </stagesList>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <hudson.plugins.git.util.BuildData plugin="git@3.9.1">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/master</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@2.7.3">
              <sha1>b6bcacd902f05c555d8e92db6265c41dc61282de</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/master</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>15</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/akmaharshi/petclinic.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.git.GitTagAction plugin="git@3.9.1">
      <tags class="hudson.util.CopyOnWriteMap$Tree">
        <entry>
          <string>refs/remotes/origin/master</string>
          <list/>
        </entry>
      </tags>
      <ws>/var/jenkins_home/workspace/petclinic</ws>
    </hudson.plugins.git.GitTagAction>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@2.6">
      <revisionStates>
        <entry>
          <string>git https://github.com/akmaharshi/petclinic.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <hudson.plugins.sonar.action.SonarMarkerAction plugin="sonar@2.8"/>
    <hudson.plugins.sonar.action.SonarAnalysisAction plugin="sonar@2.8">
      <installationName>Sonar</installationName>
      <ceTaskId>AWX88e0Ug5XTS7cjcgnc</ceTaskId>
      <url>http://192.168.53.180:9000/dashboard/index/com.petclinic:all:master</url>
      <serverUrl>http://192.168.53.180:9000</serverUrl>
      <isNew>true</isNew>
      <isSkipped>false</isSkipped>
    </hudson.plugins.sonar.action.SonarAnalysisAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.54">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <hudson.tasks.MailMessageIdAction plugin="mailer@1.21"/>
    <hudson.plugins.sonar.action.SonarCacheAction plugin="sonar@2.8">
      <infoByTaskId/>
      <lastRequest>1537547078979</lastRequest>
      <lastProjInfo/>
    </hudson.plugins.sonar.action.SonarCacheAction>
  </actions>
  <queueId>20</queueId>
  <timestamp>1537546954362</timestamp>
  <startTime>1537546954365</startTime>
  <result>FAILURE</result>
  <duration>124563</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>pipeline {
	agent any
	stages {
        	stage(&apos;compile, test and package&apos;) {
        		steps {
            			sh &apos;mvn clean package&apos;
			}
        	}
               stage(&apos;SonarQube analysis&apos;) { 
                        steps {
                                withSonarQubeEnv(&apos;Sonar&apos;) {
                                        script {
                                        sh &apos;mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.3.0.603:sonar &apos; + 
                                        &apos;-f pom.xml &apos; +
                                        &apos;-Dsonar.projectKey=com.petclinic:all:master &apos; +
                                        &apos;-Dsonar.login=admin &apos; +
                                        &apos;-Dsonar.password=admin &apos; +
                                        &apos;-Dsonar.language=java &apos; +
                                        &apos;-Dsonar.sources=. &apos; +
                                        &apos;-Dsonar.tests=. &apos; +
                                        &apos;-Dsonar.test.inclusions=**/*Test*/** &apos; +
                                        &apos;-Dsonar.exclusions=**/*Test*/** &apos;
                                        }
                                }
                                script {
                                        sleep 30
                                                timeout(time: 1, unit: &apos;HOURS&apos;) {  
                                                def qg = waitForQualityGate()
                                                        if (qg.status != &apos;OK&apos;) {
                                                                error &quot;Pipeline aborted due to quality gate failure: ${qg.status}&quot;
                                                        }
                                                }
                                }
                        }
                }
               /* stage(&quot;SonarQube Quality Gate&quot;) { 
                        steps {
                                script {
                                        timeout(time: 1, unit: &apos;HOURS&apos;) {  
                                                def qg = waitForQualityGate()
                                                if (qg.status != &apos;OK&apos;) {
                                                        error &quot;Pipeline aborted due to quality gate failure: ${qg.status}&quot;
                                                }
                                        }
                                }
                        }
                } */
        	stage(&apos;archival&apos;) {
        		steps {
            	 		archiveArtifacts &apos;target/*.?ar&apos;
            		}
        	}
        	stage(&apos;unit test&apos;) {
        		steps {
		            	junit &apos;target/surefire-reports/*.xml&apos;
            		}
        	}
	}
	post { 
        	always { 
            	notify (&apos;NOTIFY&apos;)
        	}
        	failure { 
        		notify (&apos;FAIL&apos;)
        	}
        	success {
        		notify (&apos;SUCCESS&apos;)
        	}
    	}
}
def notify(status){
    emailext (
      to: &quot;anil.maharshi@gmail.com&quot;,
      subject: &quot;${status}: Job &apos;${env.JOB_NAME} [${env.BUILD_NUMBER}]&apos;&quot;,
      body: &quot;&quot;&quot;&lt;p&gt;${status}: Job &apos;${env.JOB_NAME} [${env.BUILD_NUMBER}]&apos;:&lt;/p&gt;
        &lt;p&gt;Check console output at &lt;a href=&apos;${env.BUILD_URL}&apos;&gt;${env.JOB_NAME} 	[${env.BUILD_NUMBER}]&lt;/a&gt;&lt;/p&gt;&quot;&quot;&quot;,
    	)
 }
</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>1526937947</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>8333271894</long>
      </entry>
      <entry>
        <string>run</string>
        <long>8717327433</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>2547659682</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>1195998582</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>58</iota>
    <head>1:58</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.1">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/akmaharshi/petclinic.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/master</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions/>
      </scm>
      <node></node>
      <workspace>/var/jenkins_home/workspace/petclinic</workspace>
      <changelogFile>/var/jenkins_home/jobs/petclinic/builds/15/changelog0.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>